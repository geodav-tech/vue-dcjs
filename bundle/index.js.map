{"version":3,"file":"index.js","sources":["../src/plugins/axis-chart.class.js","../src/plugins/dc.plugin.js","../src/dc-utils.js","../src/mixins/group.mixin.vue","../src/index.js"],"sourcesContent":["import { CapMixin, ColorMixin, MarginMixin, transition } from 'dc'\nimport {axisBottom, extent as d3Extent, scaleLinear} from 'd3'\n\n// https://gist.github.com/ialarmedalien/ebca7eeb67c6d0b0a7809c46ef160cd0\n// Adapted into a class implementation by shawn@geodav.tech\n/**\n * Separate axis implementation.\n *\n * Examples:\n * - {@link https://bl.ocks.org/ialarmedalien/0a4bf25ffc0fb96ae569a20f91957bc1 eslint on dc.js source}\n * @class AxisChart\n * @example\n * // create an axis under #chart-container1 element using the default global chart group\n * var chart1 = new AxisChart('#chart-container1');\n * // create an axis under #chart-container2 element using chart group A\n * var chart2 = new AxisChart('#chart-container2', 'chartGroupA');\n * @param {String|node|d3.selection} parent - Any valid\n * {@link https://github.com/d3/d3-selection d3 single selector} specifying\n * a dom block element such as a div; or a dom element or d3 selection.\n * @param {String} [chartGroup] - The name of the chart group this chart instance should be placed in.\n * Interaction with a chart will only trigger events and redraws within the chart's group.\n */\nexport class AxisChart extends CapMixin(ColorMixin(MarginMixin)) {\n  _g\n  _scale\n  _elastic\n  _type = 'axisBottom'\n  _theAxis = axisBottom()\n  _axisData\n  validAxisTypes = ['axisBottom', 'axisTop', 'axisLeft', 'axisRight']\n  axisCap\n\n  calculateAxisScale () {\n    if (!this._scale || !this._elastic) {\n      var extent = d3Extent(this._axisData, (d, i) => this.cappedValueAccessor(d, i))\n      if (extent[0] > 0) {\n        extent[0] = 0\n      }\n      if (extent[1] < 0) {\n        extent[1] = 0\n      }\n      this._scale = scaleLinear().domain(extent)\n        .range([0, (this._type === 'axisBottom' || this._type === 'axisTop' ? this.effectiveWidth() : this.effectiveHeight())])\n    }\n    this._theAxis.scale(this._scale)\n  }\n\n  drawAxis () {\n    var axisG = this._g.select('g.axis')\n\n    this.calculateAxisScale()\n\n    if (axisG.empty()) {\n      axisG = this._g.append('g').attr('class', 'axis')\n    }\n\n    transition(axisG, this.transitionDuration(), this.transitionDelay()).call(this._theAxis)\n  }\n\n  _doRender() {\n    this.resetSvg()\n    this._g = this.svg().append('g').attr('transform', `translate(${this.margins().left}, ${this.margins().top})`)\n    this.drawChart()\n    return this\n  }\n\n  /**\n   * Gets or sets the axis type. The axis type can be any valid\n   * {@link https://github.com/d3/d3-axis d3 axis}. The default is\n   * axisBottom (a bottom axis).\n   * @see {@link https://github.com/d3/d3-axis d3 axis}\n   * @param {d3.type} [type]\n   * @returns {string|dc.axisChart} no args: type string; args: axis chart\n   */\n  type(type) {\n    if (!arguments.length) {\n      return this._type\n    }\n    if (this.validAxisTypes.indexOf(type) !== -1) {\n      this._theAxis = d3[type]()\n      this._type = type\n    } else {\n      console.error(type + ' is not a valid d3 axis type')\n    }\n    return this\n  }\n\n  /**\n   * Gets or sets the axis scale. The axis scale can be any d3\n   * {@link https://github.com/d3/d3-scale quantitative scale}.\n   * @see {@link https://github.com/d3/d3-scale quantitative scale}\n   * @param {d3.scale} [scale] any value d3 scale\n   * @returns {d3.scale|dc.axisChart} no args: chart scale; args: axis chart\n   */\n  scale (scale) {\n    if (!arguments.length) {\n      return this._scale\n    }\n    this._scale = scale\n    return this\n  }\n  \n  /**\n   * Get or set the elasticity on the axis. If this attribute is set to true,\n   * then the axis will rescale to auto-fit the data range when filtered.\n   * @param {Boolean} [elastic] any valid boolean\n   * @returns {Boolean|dc.axisChart} no args: boolean; args: axis chart\n   */\n  elastic (elastic) {\n    if (!arguments.length) {\n      return this._elastic\n    }\n    this._elastic = elastic\n    return this\n  }\n\n  /**\n   * Get the axis for the axis chart instance.\n   * See the {@link https://github.com/d3/d3-axis d3 axis object}\n   * documention for more information.\n   * @see {@link https://github.com/d3/d3-axis d3.axis}\n   * @example\n   * // customize axis tick format\n   * chart.axis().tickFormat(function (v) {return v + '%';});\n   * // customize axis tick values\n   * chart.axis().tickValues([0, 100, 200, 300]);\n   * @returns {d3.axis} d3 axis\n   */\n  axis() {\n    return this._theAxis\n  }\n\n  drawChart () {\n    this._axisData = this.data()\n    this.drawAxis()\n  }\n\n  _doRedraw () {\n    this.drawChart()\n    return this\n  }\n\n  constructor(parent, chartGroup) {\n    super()\n    return this.anchor(parent, chartGroup)\n  }\n}","import * as dc from 'dc'\nimport * as d3 from 'd3'\nimport crossfilter from 'crossfilter2'\nimport { AxisChart } from './axis-chart.class'\n\n/**\n * import DcPlugin from 'this.file'\n * Vue.use(DcPlugin)\n * \n * binds dc, d3, and crossfilter to vue via $dc, $d3, $crossfilter\n */\nexport default {\n  install (Vue, options) {\n    dc.AxisChart = AxisChart\n    if (options?.defaultColors) {\n      dc.config.defaultColors = options.defaultColors\n    }\n\n    Vue.prototype.$dc = dc\n    Vue.prototype.$d3 = d3\n    Vue.prototype.$crossfilter = crossfilter\n  }\n}","/**\n * \n * @param {String | Function} accessor used for keyAccessor valueAccessor, label, title, etc.\n * @returns {Function} to use like this.chart.keyAccessor(accessorFunc(keyAccessor))\n */\nexport function accessorFunc(accessor) {\n  return typeof accessor === 'function' ? accessor : d => d[accessor]\n}\n","<script>\nimport { accessorFunc } from '../dc-utils.js'\nexport default {\n  name: 'GroupMixin',\n  props: {\n    reducer: {\n      type: [String, Function, Object],\n    },\n    groupOptions: {\n      /**\n       * sumKey: string | function\n       * order: d => orderValue,\n       * orderNatural: boolean (not compatable with order),\n       */\n      type: Object\n    }\n  },\n  methods: {\n    createGroup (dimension) {\n      let group = dimension.group()\n\n      if (this.groupOptions && this.groupOptions.order) {\n        if (typeof this.groupOptions.order === 'string') {\n          group.order(d => d[this.groupOptions.order])\n        } else if (typeof this.groupOptions.order === 'function') {\n          group.order(this.groupOptions.order)\n        }\n      } else if (this.groupOptions && this.groupOptions.orderNatural) {\n        group.orderNatural()\n      }\n\n      if (typeof this.reducer === 'string' || typeof this.reducer === 'function') {\n        group.reduceSum(accessorFunc(this.reducer))\n      } else if (this.reducer.add && this.reducer.remove && this.reducer.init) {\n        let { add, remove, init } = this.reducer\n        group.reduce(add, remove, init)\n      }\n\n      this.$emit('group-created', group)\n      return group\n    }\n  }\n}\n</script>","// it seems important to use FULL filenames with extensions\nimport DcPlugin from './plugins/dc.plugin.js'\nimport DcRowChart from './components/dc-row-chart.vue'\n\nconst VueDc = {\n  install (Vue, options) {\n    // hmm do we prevent this from polluting the namespace?\n    // what if the user overrides $super in their code??\n    // https://forum.vuejs.org/t/call-the-overrided-method-from-extend-mixin-think-super/1469\n    // https://github.com/iashraful/vue-super-call/blob/master/index.js\n    Vue.prototype.$super = function (options) {\n      return new Proxy(options, {\n        get: (options, name) => {\n          if (options.methods && name in options.methods) {\n            return options.methods[name].bind(this)\n          }\n        },\n      })\n    }\n\n    // register $dc, $d3, $crossfilter\n    Vue.use(DcPlugin, options)\n\n    // register out of the box components\n    Vue.component('dc-row-chart', DcRowChart)\n  }\n}\n\n// fix warning prefer_named_exports by naming this export\nexport {\n  VueDc\n}"],"names":["AxisChart","CapMixin","ColorMixin","MarginMixin","parent","chartGroup","axisBottom","_this","anchor","this","_scale","_elastic","extent","d3Extent","_axisData","d","i","_this2","cappedValueAccessor","scaleLinear","domain","range","_type","effectiveWidth","effectiveHeight","_theAxis","scale","axisG","_g","select","calculateAxisScale","empty","append","attr","transition","transitionDuration","transitionDelay","call","resetSvg","svg","margins","left","top","drawChart","type","arguments","length","validAxisTypes","indexOf","d3","console","error","elastic","data","drawAxis","install","Vue","options","dc","defaultColors","config","prototype","$dc","$d3","$crossfilter","crossfilter","accessorFunc","accessor","VueDc","$super","Proxy","get","name","methods","bind","use","DcPlugin","component","DcRowChart"],"mappings":";;;;4xDAsBaA,iSAAkBC,WAASC,aAAWC,6CAwHrCC,EAAQC,uNApHZ,gCACGC,mEAEM,CAAC,aAAc,UAAW,WAAY,2CAmH9CC,EAAKC,OAAOJ,EAAQC,mDAhH7B,0BACOI,KAAKC,SAAWD,KAAKE,SAAU,KAC9BC,EAASC,SAASJ,KAAKK,WAAW,SAACC,EAAGC,UAAMC,EAAKC,oBAAoBH,EAAGC,MACxEJ,EAAO,GAAK,IACdA,EAAO,GAAK,GAEVA,EAAO,GAAK,IACdA,EAAO,GAAK,QAETF,OAASS,gBAAcC,OAAOR,GAChCS,MAAM,CAAC,EAAmB,eAAfZ,KAAKa,OAAyC,YAAfb,KAAKa,MAAsBb,KAAKc,iBAAmBd,KAAKe,yBAElGC,SAASC,MAAMjB,KAAKC,gCAG3B,eACMiB,EAAQlB,KAAKmB,GAAGC,OAAO,eAEtBC,qBAEDH,EAAMI,UACRJ,EAAQlB,KAAKmB,GAAGI,OAAO,KAAKC,KAAK,QAAS,SAG5CC,aAAWP,EAAOlB,KAAK0B,qBAAsB1B,KAAK2B,mBAAmBC,KAAK5B,KAAKgB,mCAGjF,uBACOa,gBACAV,GAAKnB,KAAK8B,MAAMP,OAAO,KAAKC,KAAK,gCAA0BxB,KAAK+B,UAAUC,kBAAShC,KAAK+B,UAAUE,eAClGC,YACElC,yBAWT,SAAKmC,UACEC,UAAUC,SAG4B,IAAvCrC,KAAKsC,eAAeC,QAAQJ,SACzBnB,SAAWwB,GAAGL,UACdtB,MAAQsB,GAEbM,QAAQC,MAAMP,EAAO,gCAEhBnC,MAREA,KAAKa,2BAkBhB,SAAOI,UACAmB,UAAUC,aAGVpC,OAASgB,EACPjB,MAHEA,KAAKC,8BAYhB,SAAS0C,UACFP,UAAUC,aAGVnC,SAAWyC,EACT3C,MAHEA,KAAKE,6BAkBhB,kBACSF,KAAKgB,kCAGd,gBACOX,UAAYL,KAAK4C,YACjBC,oCAGP,uBACOX,YACElC,+FChII,CACb8C,iBAASC,EAAKC,GACZC,EAAG1D,UAAYA,EACXyD,MAAAA,GAAAA,EAASE,gBACXD,EAAGE,OAAOD,cAAgBF,EAAQE,eAGpCH,EAAIK,UAAUC,IAAMJ,EACpBF,EAAIK,UAAUE,IAAMd,EACpBO,EAAIK,UAAUG,aAAeC,25CCf1B,SAASC,EAAaC,SACA,mBAAbA,EAA0BA,EAAW,SAAApD,UAAKA,EAAEoD,ICJ5D,ytFCEMC,EAAQ,CACZb,iBAASC,EAAKC,GAKZD,EAAIK,UAAUQ,OAAS,SAAUZ,qBACxB,IAAIa,MAAMb,EAAS,CACxBc,IAAK,SAACd,EAASe,MACTf,EAAQgB,SAAWD,KAAQf,EAAQgB,eAC9BhB,EAAQgB,QAAQD,GAAME,KAAKnE,OAO1CiD,EAAImB,IAAIC,EAAUnB,GAGlBD,EAAIqB,UAAU,eAAgBC"}